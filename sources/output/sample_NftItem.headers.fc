;;
;; Header files for NftItem
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_prepare_random
() __tact_prepare_random() impure inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $Stake$_load
(slice, ((int))) $Stake$_load(slice sc_0) inline;

;; $Transfer$_load
(slice, ((int, slice, slice, cell, int, slice))) $Transfer$_load(slice sc_0) inline_ref;

;; $OwnershipAssigned$_store
builder $OwnershipAssigned$_store(builder build_0, (int, slice, slice) v) inline;

;; $OwnershipAssigned$_store_cell
cell $OwnershipAssigned$_store_cell((int, slice, slice) v) inline;

;; $Excesses$_store
builder $Excesses$_store(builder build_0, (int) v) inline;

;; $Excesses$_store_cell
cell $Excesses$_store_cell((int) v) inline;

;; $GetStaticData$_load
(slice, ((int))) $GetStaticData$_load(slice sc_0) inline;

;; $ReportStaticData$_store
builder $ReportStaticData$_store(builder build_0, (int, int, slice) v) inline;

;; $ReportStaticData$_store_cell
cell $ReportStaticData$_store_cell((int, int, slice) v) inline;

;; $StakeNFT$_store
builder $StakeNFT$_store(builder build_0, (slice, int, int, int) v) inline;

;; $StakeNFT$_store_cell
cell $StakeNFT$_store_cell((slice, int, int, int) v) inline;

;; $ClaimNFT$_store
builder $ClaimNFT$_store(builder build_0, (int) v) inline;

;; $ClaimNFT$_store_cell
cell $ClaimNFT$_store_cell((int) v) inline;

;; $NftItem$_store
builder $NftItem$_store(builder build_0, (slice, int, slice, cell, int, int, int) v) inline;

;; $NftItem$_load
(slice, ((slice, int, slice, cell, int, int, int))) $NftItem$_load(slice sc_0) inline;

;; $GetNftData$_to_external
(int, int, slice, slice, cell, int) $GetNftData$_to_external(((int, int, slice, slice, cell, int)) v) inline;

;; $NftItem$init$_load
(slice, ((slice, int, slice, cell))) $NftItem$init$_load(slice sc_0) inline;

;; $StakingContract$init$_store
builder $StakingContract$init$_store(builder build_0, (slice) v) inline;

;; $NftItem$_contract_init
(slice, int, slice, cell, int, int, int) $NftItem$_contract_init(slice $collection_address, int $item_index, slice $owner, cell $individual_content) impure inline_ref;

;; $NftItem$_contract_load
(slice, int, slice, cell, int, int, int) $NftItem$_contract_load() impure inline_ref;

;; $NftItem$_contract_store
() $NftItem$_contract_store((slice, int, slice, cell, int, int, int) v) impure inline;

;; $global_random
int $global_random(int $min, int $max) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $StakingContract$_init_child
(cell, cell) $StakingContract$_init_child(cell sys', slice $_nft) inline_ref;

;; $NftItem$_fun_get_staking_contract_address
((slice, int, slice, cell, int, int, int), slice) $NftItem$_fun_get_staking_contract_address((slice, int, slice, cell, int, int, int) $self) impure inline_ref;

;; $NftItem$_fun_get_nft_level
((slice, int, slice, cell, int, int, int), int) $NftItem$_fun_get_nft_level((slice, int, slice, cell, int, int, int) $self) impure inline_ref;

;; $GetNftData$_constructor_is_initialized_index_collection_address_owner_address_individual_content_level
((int, int, slice, slice, cell, int)) $GetNftData$_constructor_is_initialized_index_collection_address_owner_address_individual_content_level(int is_initialized, int index, slice collection_address, slice owner_address, cell individual_content, int level) inline;

;; $NftItem$_fun_get_nft_data
((slice, int, slice, cell, int, int, int), (int, int, slice, slice, cell, int)) $NftItem$_fun_get_nft_data((slice, int, slice, cell, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Excesses$_constructor_query_id
((int)) $Excesses$_constructor_query_id(int query_id) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload
((int, slice, slice)) $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload(int query_id, slice prev_owner, slice forward_payload) inline;

;; $SendParameters$_constructor_to_mode_value_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_mode_value_body(slice to, int mode, int value, cell body) inline;

;; $ReportStaticData$_constructor_query_id_index_id_collection
((int, int, slice)) $ReportStaticData$_constructor_query_id_index_id_collection(int query_id, int index_id, slice collection) inline;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice to, int value, int mode, cell code, cell data, cell body) inline;

;; $StakeNFT$_constructor_sender_nft_item_address_nftId_duration_level
((slice, int, int, int)) $StakeNFT$_constructor_sender_nft_item_address_nftId_duration_level(slice sender_nft_item_address, int nftId, int duration, int level) inline;

;; $ClaimNFT$_constructor_nftId
((int)) $ClaimNFT$_constructor_nftId(int nftId) inline;
